---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vllm.fullname" . }}
  labels:
    {{- include "vllm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.deploymentStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "vllm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vllm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vllm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if and (eq .Values.configuration.modelStorage.type "image") (eq .Values.configuration.modelStorage.image.type "modelCar") }}
      shareProcessNamespace: true
      initContainers:
        - name: modelcar-init
          image: {{ .Values.configuration.modelStorage.image.reference }}
          command:
            - /app/entrypoint.sh
          args:
            - check
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: modelcar-mount
              mountPath: /app
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - /bin/sh
          args:
            - -c
            - >-
              vllm serve
              {{- if eq .Values.configuration.modelStorage.type "image" }}
              {{ .Values.configuration.modelStorage.mountPath }}
              {{- else }}
              {{ .Values.configuration.modelReference }}
              {{- end }}
              --port {{ .Values.service.port }}
              {{- range .Values.configuration.extraArgs }}
              {{ quote . }}
              {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "vllm.fullname" . }}
            {{- if and (ne .Values.configuration.modelStorage.type "image") .Values.configuration.hfModelDownload.enabled }}
            - secretRef:
                name: {{ include "vllm.fullname" . }}
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: model-storage
              mountPath: {{ .Values.configuration.modelStorage.mountPath }}
            - name: shm
              mountPath: /dev/shm
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /home/vllm/.cache
        {{- if and (eq .Values.configuration.modelStorage.type "image") (eq .Values.configuration.modelStorage.image.type "modelCar") }}
        - name: modelcar
          image: {{ .Values.configuration.modelStorage.image.reference }}
          command:
            - /app/entrypoint.sh
          args:
            - mount
            - {{ .Values.configuration.modelStorage.mountPath }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: model-storage
              mountPath: {{ .Values.configuration.modelStorage.mountPath }}
            - name: modelcar-mount
              mountPath: /app
        {{- end }}
      volumes:
        - name: model-storage
        {{- if eq .Values.configuration.modelStorage.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ include "vllm.fullname" . }}-storage
            readOnly: {{ not .Values.configuration.hfModelDownload.enabled }}
        {{- else if eq .Values.configuration.modelStorage.type "emptyDir" }}
          emptyDir:
            sizeLimit: {{ .Values.configuration.modelStorage.size }}
            {{- with .Values.configuration.modelStorage.emptyDir }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- else if eq .Values.configuration.modelStorage.type "image" }}
        {{- if eq .Values.configuration.modelStorage.image.type "artifact" }}
          image:
            {{- toYaml .Values.configuration.modelStorage.image | nindent 12 }}
        {{- else if eq .Values.configuration.modelStorage.image.type "modelCar" }}
          emptyDir: {}
        - name: modelcar-mount
          configMap:
            name:  {{ include "vllm.fullname" . }}-modelcar-mount
            defaultMode: 493
        {{- end }} {{/* artifact vs modelCar */}}
        {{- end }} {{/* modelStorage.type */}}
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.configuration.shm.size }}
        - name: tmp
          emptyDir: {}
        - name: cache
          {{- if eq .Values.configuration.cache.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ include "vllm.fullname" . }}-cache
            readOnly: false
          {{- else if eq .Values.configuration.cache.type "emptyDir" }}
          emptyDir:
            sizeLimit: {{ .Values.configuration.cache.size }}
            {{- with .Values.configuration.cache.emptyDir }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
